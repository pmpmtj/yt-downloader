# Generated by Django 5.2 on 2025-09-22 16:24

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_id', models.CharField(help_text="YouTube video ID (e.g., '_L1JbzDnEMk')", max_length=50, primary_key=True, serialize=False)),
                ('title', models.TextField(help_text='Video title')),
                ('duration_s', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('upload_date', models.DateField(blank=True, help_text='Video upload date', null=True)),
                ('uploader', models.TextField(blank=True, help_text='Channel/uploader name', null=True)),
                ('language_code', models.CharField(blank=True, help_text="Language code (e.g., 'en')", max_length=10, null=True)),
                ('is_generated', models.BooleanField(blank=True, help_text='Auto-generated captions?', null=True)),
                ('metadata', models.JSONField(default=dict, help_text='Raw video metadata')),
                ('processed_at', models.DateTimeField(auto_now_add=True, help_text='When transcript was processed')),
                ('text_word_count', models.PositiveIntegerField(blank=True, help_text='Total word count', null=True)),
                ('text_char_count', models.PositiveIntegerField(blank=True, help_text='Total character count', null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transcript_videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'transcriptions_video',
            },
        ),
        migrations.CreateModel(
            name='TranscriptSegment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_time_s', models.DecimalField(decimal_places=3, help_text='Segment start time in seconds', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('duration_s', models.DecimalField(decimal_places=3, help_text='Segment duration in seconds', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('text', models.TextField(help_text='Segment text content')),
                ('is_generated', models.BooleanField(blank=True, help_text='Auto-generated segment?', null=True)),
                ('source', models.CharField(default='youtube', help_text='Source of transcript', max_length=50)),
                ('text_hash', models.CharField(help_text='SHA256 hash of text for deduplication', max_length=64)),
                ('extra', models.JSONField(default=dict, help_text='Additional segment metadata')),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, help_text='Full-text search vector', null=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='transcriptions_dl.video')),
            ],
            options={
                'db_table': 'transcriptions_segment',
                'ordering': ['start_time_s'],
            },
        ),
        migrations.CreateModel(
            name='RawAsset',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('kind', models.CharField(choices=[('clean_text', 'Clean Text'), ('timestamped', 'Timestamped Text'), ('structured_json', 'Structured JSON')], help_text='Type of asset', max_length=20)),
                ('content_text', models.TextField(blank=True, help_text='Text content', null=True)),
                ('content_json', models.JSONField(blank=True, help_text='JSON content', null=True)),
                ('stored_at', models.DateTimeField(auto_now_add=True, help_text='When asset was stored')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raw_assets', to='transcriptions_dl.video')),
            ],
            options={
                'db_table': 'transcriptions_rawasset',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_time_s', models.DecimalField(decimal_places=3, help_text='Chapter start time in seconds', max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('end_time_s', models.DecimalField(blank=True, decimal_places=3, help_text='Chapter end time in seconds', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('text', models.TextField(help_text='Chapter title/text')),
                ('summary', models.TextField(blank=True, help_text='Chapter summary', null=True)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='transcriptions_dl.video')),
            ],
            options={
                'db_table': 'transcriptions_chapter',
                'ordering': ['start_time_s'],
            },
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['user', 'video_id'], name='transcripti_user_id_b403dc_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['user', 'processed_at'], name='transcripti_user_id_4702e0_idx'),
        ),
        migrations.AddIndex(
            model_name='video',
            index=models.Index(fields=['language_code'], name='transcripti_languag_c88813_idx'),
        ),
        migrations.AddIndex(
            model_name='transcriptsegment',
            index=models.Index(fields=['video', 'start_time_s'], name='transcripti_video_i_75895b_idx'),
        ),
        migrations.AddIndex(
            model_name='transcriptsegment',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='seg_tsv_idx'),
        ),
        migrations.AddIndex(
            model_name='rawasset',
            index=models.Index(fields=['video', 'kind'], name='transcripti_video_i_063e17_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rawasset',
            unique_together={('video', 'kind')},
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['video', 'start_time_s'], name='transcripti_video_i_b1d8d5_idx'),
        ),
    ]
